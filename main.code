####################
## LOADING REQUIRED LIBRARIES
####################

library(tidyverse)
library(tigris)
library(tidycensus)
library(readxl)
library(data.table)
library(sf)
library(broom)
library(viridis)
library(janitor)
library(scales)
library(ggthemes)
library(mapboxapi)
library(cluster)
library(factoextra)
library(httr)
library(stringr)
library(magrittr)
library(data.table)
library(geosphere)
library(lubridate)
library(layer)
library(gt)
library(gtExtras)
library(gtsummary)
library(viridis)
library(fiftystater)
library(devtools)
library(ggbiplot)
library(corrr)
library(mapdeck)
library(ggthemes)


###SETTING OPTION FOR SCIENTIFIC NOTATION
options(scipen = 999)

####################
## SETTING CACHE OPTIONS FOR TIGRIS TO IMPROVE CPU PERFORMANCE
####################

options(tigris_use_cache = TRUE)

####################
## PROVIDING API TO CONNECT TO CENSUS INFO AND TO MAPBOX API
####################

census_api_key("1a47c66da9f6c0239edead6eebbf3bceafcf6dca", overwrite = TRUE) ##FOR TIDYCENSUS
readRenviron("~/.Renviron")

my_token <- "pk.eyJ1IjoiYmNvbmdlbGlvIiwiYSI6ImNrem96eDFsbjA2NDkybm9hdTRvYTJ1ZncifQ.jZ3aSxrQ2NVNV5A-aMEylw"
my_secret_token <- "sk.eyJ1IjoiYmNvbmdlbGlvIiwiYSI6ImNrem96b2h5NzJoa3YydnM4bTAwZWR2c2wifQ.pz26Rj7p8jfkKc9hLkjOzQ"
mb_access_token(my_secret_token, overwrite  = TRUE, install = TRUE) ##FOR MAPBOX API
Sys.getenv("MAPBOX_SECRET_TOKEN")
readRenviron("~/.Renviron")

####################
## STADIUM INFORMATION SO I DON'T FORGET & ACS STUFF FOR REFERENCE
####################

## 1. Allegiant Stadium (Paradise, Nevada - 2020) S: 2017   E: 2019 
## 2. SoFi Stadium (Inglewood, California - 2020) S: 2016   E: 2019  
## 3. Mercedes-Benz Stadium (Atlanta, Georgia - 2017) S: 2013   E: 2017  
## 4. U.S. Bank Stadium (Minneapolis, Minnesota - 2016) S: 2013  E: 2016  
## 5. Levi's Stadium (Santa Clara, California - 2014)  S: 2012  E: 2014
## 6. MetLife Stadium (East Rutherford, New Jersey - 2010) S: 2007   E: 2010
## 7. AT&T Stadium (Arlington, Texas - 2009) S: 2005  E: 2009
## 8. Lucas Oil Stadium (Indianapolis, Indiana - 2008) S: 2005  E: 2008

## 9. Proposed Chicago Bears Stadium (Arlington Heights, Illinois) S: 2019


####################
## GRABBING AND LOADING THE VARIABLES FOR THE ACS
####################

variables <- load_variables(2009, "acs5", cache = TRUE)
View(variables)

####################
## SETTING UP VARIABLES ACS5 - **NOTE: these are edited for each year, as variables are changed by US Census
####################

##EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER - MASTER'S DEGREE
educational_attainment <- c(
  graduate.degree = "B15003_023"
)

race_demographic <- c(
  white = "C02003_003",
  black = "C02003_004",
  asian = "C02003_006",
  hispanic = "B03002_012"
)

housing_numbers <- c(
  units_loan = "B25081_002",
  units_owned = "B25081_008",
  units_rented = "B25003_003"  ##search is "Renter Occupied"
)

rent_to_income <- c(
  median.rent = "B25064_001",  ##search is "Median gross rent"
  median.income = "B19013_001" ##search s "Median household income in the past 12 months"
)

mortgage_to_income <- c(
  mortgage.ratio = "B25092_002"
)

####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - PARADISE, NEVADA
####################

####LAS VEGAS RAIDERS --- RACE DEMOGRAPHICS
paradise.nevada.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "NV",
  county = "Clark",
  year = 2017,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####LAS VEGAS RAIDERS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
nevada.cities <- get_acs(
  geography = "place",
  state = "NV",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2017,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" CDP, Nevada")))

####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.race <- paradise.nevada.race %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
paradise.nevada.race <- paradise.nevada.race %>%
  st_drop_geometry()


##################
##################


####LAS VEGAS RAIDERS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
paradise.nevada.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "NV", 
  county = "Clark",
  year = 2017,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.housing <- paradise.nevada.housing %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
paradise.nevada.housing <- paradise.nevada.housing %>%
  st_drop_geometry()

##################
##################

####LAS VEGAS RAIDERS --- RENT TO INCOME RATIO
paradise.nevada.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "NV", 
  county = "Clark",
  year = 2017,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

paradise.nevada.rentincome$rent.ratio[is.na(paradise.nevada.rentincome$rent.ratio)] <- 
  mean(paradise.nevada.rentincome$rent.ratio, na.rm = TRUE)

paradise.nevada.rentincome <- paradise.nevada.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.rentincome <- paradise.nevada.rentincome %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
paradise.nevada.rentincome <- paradise.nevada.rentincome %>%
  st_drop_geometry()


##################
##################

####LAS VEGAS RAIDERS --- MORTGAGE TO INCOME RATIO
paradise.nevada.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "NV", 
  county = "Clark",
  year = 2017,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

paradise.nevada.mortgageratio$mortgage.ratioE[is.na(paradise.nevada.mortgageratio$mortgage.ratioE)] <- 
  mean(paradise.nevada.mortgageratio$mortgage.ratioE, na.rm = TRUE)

paradise.nevada.mortgageratio <- paradise.nevada.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.mortgageratio <- paradise.nevada.mortgageratio %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
paradise.nevada.mortgageratio <- paradise.nevada.mortgageratio %>%
  st_drop_geometry()



##################
##################

####LAS VEGAS RAIDERS --- EDUCATIONAL ATTAINMENT
paradise.nevada.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "NV",
  county = "Clark",
  year = 2017,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####LAS VEGAS RAIDERS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
nevada.cities <- get_acs(
  geography = "place",
  state = "NV",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2017,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" CDP, Nevada")))

####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.education <- paradise.nevada.education %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))


####JOINING TO COMBINED TRACTS TO DATA
paradise.nevada.education <- paradise.nevada.education %>%
  st_join(nevada.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Paradise") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

paradise.nevada.education <- paradise.nevada.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
paradise.nevada.education <- paradise.nevada.education %>%
  st_drop_geometry()


####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
paradise.nevada.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "NV",
  county = "Clark",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####LAS VEGAS RAIDERS --- JOINING THE DATAFRAMES INTO ONE
paradise.nevada <- paradise.nevada.geo %>%
  left_join(paradise.nevada.housing) %>%
  left_join(paradise.nevada.race) %>%
  left_join(paradise.nevada.rentincome) %>%
  left_join(paradise.nevada.mortgageratio) %>%
  left_join(paradise.nevada.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Paradise")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
allegiant.stadium.distance <- mb_geocode("Allegiant Stadium, Paradise NV")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_allegiant <- mb_matrix(paradise.nevada, allegiant.stadium.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
paradise.nevada$distance.to.stadium <- as.numeric(minutes_to_allegiant)


####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - INGLEWOOD, CALIFORNIA
####################

####LOS ANGELES RAMS --- RACE DEMOGRAPHICS
inglewood.cali.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "CA",
  county = "Los Angeles",
  year = 2016,
  geometry = TRUE,
  summary_var = "B02001_001") %>%
  arrange(GEOID) %>%
  mutate(estimate = estimate / summary_est) %>%
  select(-c(summary_est, moe, summary_moe))

####LAS VEGAS RAIDERS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
cali.cities <- get_acs(
  geography = "place",
  state = "CA",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2016,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, California")))

####JOINING TO COMBINED TRACTS TO DATA
inglewood.cali.race <- inglewood.cali.race %>%
  st_join(cali.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Inglewood") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
inglewood.cali.race <- inglewood.cali.race %>%
  st_drop_geometry()


##################
##################


####LOS ANGELES RAMS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
inglewood.cali.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "CA", 
  county = "Los Angeles",
  year = 2016,
  geometry = TRUE,
  summary_var = "B25003_001") %>%
  arrange(GEOID) %>%
  mutate(estimate = estimate / summary_est) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
inglewood.cali.housing <- inglewood.cali.housing %>%
  st_join(cali.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Inglewood") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
inglewood.cali.housing <- inglewood.cali.housing %>%
  st_drop_geometry()


##################
##################

####LOS ANGELES RAMS --- RENT TO INCOME RATIO
inglewood.cali.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "CA", 
  county = "Los Angeles",
  year = 2016,
  geometry = TRUE,
  output = "wide") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = median.rentE / (median.incomeE / 12))

inglewood.cali.rentincome$rent.ratio[is.na(inglewood.cali.rentincome$rent.ratio)] <- 
  mean(inglewood.cali.rentincome$rent.ratio, na.rm = TRUE)

inglewood.cali.rentincome <- inglewood.cali.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
inglewood.cali.rentincome <- inglewood.cali.rentincome %>%
  st_join(cali.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Inglewood") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
inglewood.cali.rentincome <- inglewood.cali.rentincome %>%
  st_drop_geometry()


##################
##################

####LOS ANGELES RAMS --- MORTGAGE TO INCOME RATIO
inglewood.cali.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "CA", 
  county = "Los Angeles",
  year = 2016,
  geometry = TRUE,
  output = "wide") %>%
  arrange(GEOID)

inglewood.cali.mortgageratio$mortgage.ratioE[is.na(inglewood.cali.mortgageratio$mortgage.ratioE)] <- 
  mean(inglewood.cali.mortgageratio$mortgage.ratioE, na.rm = TRUE)

inglewood.cali.mortgageratio <- inglewood.cali.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
inglewood.cali.mortgageratio <- inglewood.cali.mortgageratio %>%
  st_join(cali.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Inglewood") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
inglewood.cali.mortgageratio <- inglewood.cali.mortgageratio %>%
  st_drop_geometry()


##################
##################

####LOS ANGELES RAMS --- EDUCATIONAL ATTAINMENT
inglewood.cali.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "CA",
  county = "Los Angeles",
  year = 2016,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####LOS ANGELES RAMS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
inglewood.cities <- get_acs(
  geography = "place",
  state = "CA",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2016,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, California")))


####JOINING TO COMBINED TRACTS TO DATA
inglewood.cali.education <- inglewood.cali.education %>%
  st_join(inglewood.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Inglewood") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

inglewood.cali.education <- inglewood.cali.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
inglewood.cali.education <- inglewood.cali.education %>%
  st_drop_geometry()

####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
inglewood.cali.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "CA",
  county = "Los Angeles",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####LOS ANGELES RAMS --- JOINING THE DATAFRAMES INTO ONE
inglewood.cali <- inglewood.cali.geo %>%
  left_join(inglewood.cali.housing) %>%
  left_join(inglewood.cali.race) %>%
  left_join(inglewood.cali.rentincome) %>%
  left_join(inglewood.cali.mortgageratio) %>%
  left_join(inglewood.cali.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Inglewood")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
sofi.stadium.distance <- mb_geocode("SoFi Stadium, Inglewood CA")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_sofi <- mb_matrix(inglewood.cali, sofi.stadium.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
inglewood.cali$distance.to.stadium <- as.numeric(minutes_to_sofi)



####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - ATLANTA, GEORGIA
####################

####ATLANTA FALCONS --- RACE DEMOGRAPHICS
atlanta.georgia.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "GA",
  county = "Fulton",
  year = 2013,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####ATLANTA FALCONS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
georgia.cities <- get_acs(
  geography = "place",
  state = "GA",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2017,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, Georgia")))

####JOINING TO COMBINED TRACTS TO DATA
atlanta.georgia.race <- atlanta.georgia.race %>%
  st_join(georgia.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Atlanta") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
atlanta.georgia.race <- atlanta.georgia.race %>%
  st_drop_geometry()


##################
##################


####ATLANTA FALCONS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
atlanta.georgia.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "GA", 
  county = "Fulton",
  year = 2013,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
atlanta.georgia.housing <- atlanta.georgia.housing %>%
  st_join(georgia.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Atlanta") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
atlanta.georgia.housing <- atlanta.georgia.housing %>%
  st_drop_geometry()

##################
##################

####ATLANTA FALCONS --- RENT TO INCOME RATIO
atlanta.georgia.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "GA", 
  county = "Fulton",
  year = 2013,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

atlanta.georgia.rentincome$rent.ratio[is.na(atlanta.georgia.rentincome$rent.ratio)] <- 
  mean(atlanta.georgia.rentincome$rent.ratio, na.rm = TRUE)

atlanta.georgia.rentincome <- atlanta.georgia.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
atlanta.georgia.rentincome <- atlanta.georgia.rentincome %>%
  st_join(georgia.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Atlanta") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
atlanta.georgia.rentincome <- atlanta.georgia.rentincome %>%
  st_drop_geometry()


##################
##################

####ATLANTA FALCONS --- MORTGAGE TO INCOME RATIO
atlanta.georgia.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "GA", 
  county = "Fulton",
  year = 2013,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

atlanta.georgia.mortgageratio$mortgage.ratioE[is.na(atlanta.georgia.mortgageratio$mortgage.ratioE)] <- 
  mean(atlanta.georgia.mortgageratio$mortgage.ratioE, na.rm = TRUE)

atlanta.georgia.mortgageratio <- atlanta.georgia.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
atlanta.georgia.mortgageratio <- atlanta.georgia.mortgageratio %>%
  st_join(georgia.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Atlanta") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
atlanta.georgia.mortgageratio <- atlanta.georgia.mortgageratio %>%
  st_drop_geometry()



##################
##################

####ATLANTA FALCONS--- EDUCATIONAL ATTAINMENT
atlanta.georgia.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "GA",
  county = "Fulton",
  year = 2013,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))


####JOINING TO COMBINED TRACTS TO DATA
atlanta.georgia.education <- atlanta.georgia.education %>%
  st_join(georgia.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Atlanta") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

atlanta.georgia.education <- atlanta.georgia.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
atlanta.georgia.education <- atlanta.georgia.education %>%
  st_drop_geometry()


####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
atlanta.georgia.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "GA",
  county = "Fulton",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####LAS VEGAS RAIDERS --- JOINING THE DATAFRAMES INTO ONE
atlanta.georgia <- atlanta.georgia.geo %>%
  left_join(atlanta.georgia.housing) %>%
  left_join(atlanta.georgia.race) %>%
  left_join(atlanta.georgia.rentincome) %>%
  left_join(atlanta.georgia.mortgageratio) %>%
  left_join(atlanta.georgia.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Atlanta")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
mercedes.benz.distance <- mb_geocode("Mercedes Benz Stadium, Atlanta GA")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_mercedesbenz <- mb_matrix(atlanta.georgia, mercedes.benz.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
atlanta.georgia$distance.to.stadium <- as.numeric(minutes_to_mercedesbenz)



####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - MINNEAPOLIS, MINNESOTA
####################

####MINNESOTA VIKINGS --- RACE DEMOGRAPHICS
minneapolis.minnesota.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "MN",
  county = "Hennepin",
  year = 2013,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####MINNESOTA VIKINGS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
minnesota.cities <- get_acs(
  geography = "place",
  state = "MN",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2017,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, Minnesota")))

####JOINING TO COMBINED TRACTS TO DATA
minneapolis.minnesota.race <- minneapolis.minnesota.race %>%
  st_join(minnesota.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Minneapolis") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
minneapolis.minnesota.race <- minneapolis.minnesota.race %>%
  st_drop_geometry()


##################
##################


####MINNESOTA VIKINGS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
minneapolis.minnesota.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "MN", 
  county = "Hennepin",
  year = 2013,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
minneapolis.minnesota.housing <- minneapolis.minnesota.housing %>%
  st_join(minnesota.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Minneapolis") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
minneapolis.minnesota.housing <- minneapolis.minnesota.housing %>%
  st_drop_geometry()

##################
##################

####MINNESOTA VIKINGS --- RENT TO INCOME RATIO
minneapolis.minnesota.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "MN", 
  county = "Hennepin",
  year = 2013,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

minneapolis.minnesota.rentincome$rent.ratio[is.na(minneapolis.minnesota.rentincome$rent.ratio)] <- 
  mean(minneapolis.minnesota.rentincome$rent.ratio, na.rm = TRUE)

minneapolis.minnesota.rentincome <- minneapolis.minnesota.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
minneapolis.minnesota.rentincome <- minneapolis.minnesota.rentincome %>%
  st_join(minnesota.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Minneapolis") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
minneapolis.minnesota.rentincome <- minneapolis.minnesota.rentincome %>%
  st_drop_geometry()


##################
##################

####MINNESOTA VIKINGS--- MORTGAGE TO INCOME RATIO
minneapolis.minnesota.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "MN", 
  county = "Hennepin",
  year = 2013,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

minneapolis.minnesota.mortgageratio$mortgage.ratioE[is.na(minneapolis.minnesota.mortgageratio$mortgage.ratioE)] <- 
  mean(minneapolis.minnesota.mortgageratio$mortgage.ratioE, na.rm = TRUE)

minneapolis.minnesota.mortgageratio <- minneapolis.minnesota.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
minneapolis.minnesota.mortgageratio <- minneapolis.minnesota.mortgageratio %>%
  st_join(minnesota.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Minneapolis") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
minneapolis.minnesota.mortgageratio <- minneapolis.minnesota.mortgageratio %>%
  st_drop_geometry()



##################
##################

####MINNESOTA VIKINGS--- EDUCATIONAL ATTAINMENT
minneapolis.minnesota.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "MN",
  county = "Hennepin",
  year = 2013,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))


####JOINING TO COMBINED TRACTS TO DATA
minneapolis.minnesota.education <- minneapolis.minnesota.education %>%
  st_join(minnesota.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Minneapolis") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

minneapolis.minnesota.education <- minneapolis.minnesota.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
minneapolis.minnesota.education <- minneapolis.minnesota.education %>%
  st_drop_geometry()


####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
minneapolis.minnesota.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "MN",
  county = "Hennepin",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####LAS VEGAS RAIDERS --- JOINING THE DATAFRAMES INTO ONE
minneapolis.minnesota <- minneapolis.minnesota.geo %>%
  left_join(minneapolis.minnesota.housing) %>%
  left_join(minneapolis.minnesota.race) %>%
  left_join(minneapolis.minnesota.rentincome) %>%
  left_join(minneapolis.minnesota.mortgageratio) %>%
  left_join(minneapolis.minnesota.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Minneapolis")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
us.bank.distance <- mb_geocode("US Bank Stadium, Minneapolis MN")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_usbank <- mb_matrix(minneapolis.minnesota, us.bank.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
minneapolis.minnesota$distance.to.stadium <- as.numeric(minutes_to_usbank)



####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - SANTA CLARA, CALIFORNIA
####################

####SAN FRANCISCO 49ERS --- RACE DEMOGRAPHICS
santaclara.cali.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "CA",
  county = "Santa Clara",
  year = 2012,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####SAN FRANCISCO 49ERS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
california.cities <- get_acs(
  geography = "place",
  state = "CA",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2012,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, California")))

####JOINING TO COMBINED TRACTS TO DATA
santaclara.cali.race <- santaclara.cali.race %>%
  st_join(california.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Santa Clara") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
santaclara.cali.race <- santaclara.cali.race %>%
  st_drop_geometry()


##################
##################


####SAN FRANCISCO 49ERS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
santaclara.cali.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "CA", 
  county = "Santa Clara",
  year = 2012,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
santaclara.cali.housing <- santaclara.cali.housing %>%
  st_join(california.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Santa Clara") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
santaclara.cali.housing <- santaclara.cali.housing %>%
  st_drop_geometry()

##################
##################

####SAN FRANCISCO 49ERS --- RENT TO INCOME RATIO
santaclara.cali.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "CA", 
  county = "Santa Clara",
  year = 2012,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

santaclara.cali.rentincome$rent.ratio[is.na(santaclara.cali.rentincome$rent.ratio)] <- 
  mean(santaclara.cali.rentincome$rent.ratio, na.rm = TRUE)

santaclara.cali.rentincome <- santaclara.cali.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
santaclara.cali.rentincome <- santaclara.cali.rentincome %>%
  st_join(california.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Santa Clara") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
santaclara.cali.rentincome <- santaclara.cali.rentincome %>%
  st_drop_geometry()


##################
##################

####SAN FRANCISCO 49ERS--- MORTGAGE TO INCOME RATIO
santaclara.cali.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "CA", 
  county = "Santa Clara",
  year = 2012,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

santaclara.cali.mortgageratio$mortgage.ratioE[is.na(santaclara.cali.mortgageratio$mortgage.ratioE)] <- 
  mean(santaclara.cali.mortgageratio$mortgage.ratioE, na.rm = TRUE)

santaclara.cali.mortgageratio <- santaclara.cali.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
santaclara.cali.mortgageratio <- santaclara.cali.mortgageratio %>%
  st_join(california.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Santa Clara") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
santaclara.cali.mortgageratio <- santaclara.cali.mortgageratio %>%
  st_drop_geometry()



##################
##################

####SAN FRANCISCO 49ERS--- EDUCATIONAL ATTAINMENT
santaclara.cali.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "CA",
  county = "Santa Clara",
  year = 2012,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))


####JOINING TO COMBINED TRACTS TO DATA
santaclara.cali.education <- santaclara.cali.education %>%
  st_join(california.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Santa Clara") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

santaclara.cali.education <- santaclara.cali.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
santaclara.cali.education <- santaclara.cali.education %>%
  st_drop_geometry()


####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
santaclara.cali.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "CA",
  county = "Santa Clara",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####SAN FRANCISCO 49ERS--- JOINING THE DATAFRAMES INTO ONE
santaclara.cali <- santaclara.cali.geo %>%
  left_join(santaclara.cali.housing) %>%
  left_join(santaclara.cali.race) %>%
  left_join(santaclara.cali.rentincome) %>%
  left_join(santaclara.cali.mortgageratio) %>%
  left_join(santaclara.cali.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Santa Clara")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
levi.stadium.distance <- mb_geocode("Levis Stadium, Santa Clara CA")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_levis <- mb_matrix(santaclara.cali, levi.stadium.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
santaclara.cali$distance.to.stadium <- as.numeric(minutes_to_levis)



####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - EAST RUTHERFORD, NEW JERSEY
####################

####GIANTS/JETS --- RACE DEMOGRAPHICS
rutherford.nj.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "NJ",
  county = "Bergen",
  year = 2009,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####GIANTS/JETS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
nj.cities <- get_acs(
  geography = "place",
  state = "NJ",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2015,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" city, New Jersey")))

####JOINING TO COMBINED TRACTS TO DATA
rutherford.nj.race <- rutherford.nj.race %>%
  st_join(nj.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Passaic") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
rutherford.nj.race <- rutherford.nj.race %>%
  st_drop_geometry()


##################
##################


####GIANTS/JETS --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
rutherford.nj.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "NJ", 
  county = "Bergen",
  year = 2009,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
rutherford.nj.housing <- rutherford.nj.housing %>%
  st_join(nj.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Passaic") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
rutherford.nj.housing <- rutherford.nj.housing %>%
  st_drop_geometry()

##################
##################

####GIANTS/JETS --- RENT TO INCOME RATIO
rutherford.nj.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "NJ", 
  county = "Bergen",
  year = 2009,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

rutherford.nj.rentincome$rent.ratio[is.na(rutherford.nj.rentincome$rent.ratio)] <- 
  mean(rutherford.nj.rentincome$rent.ratio, na.rm = TRUE)

rutherford.nj.rentincome <- rutherford.nj.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
rutherford.nj.rentincome <- rutherford.nj.rentincome %>%
  st_join(nj.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Passaic") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
rutherford.nj.rentincome <- rutherford.nj.rentincome %>%
  st_drop_geometry()


##################
##################

####GIANTS/JETS--- MORTGAGE TO INCOME RATIO
rutherford.nj.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "NJ", 
  county = "Bergen",
  year = 2009,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

rutherford.nj.mortgageratio$mortgage.ratioE[is.na(rutherford.nj.mortgageratio$mortgage.ratioE)] <- 
  mean(rutherford.nj.mortgageratio$mortgage.ratioE, na.rm = TRUE)

rutherford.nj.mortgageratio <- rutherford.nj.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
rutherford.nj.mortgageratio <- rutherford.nj.mortgageratio %>%
  st_join(nj.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Passaic") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
rutherford.nj.mortgageratio <- rutherford.nj.mortgageratio %>%
  st_drop_geometry()



##################
##################

nj.educational_attainment <- c(
  male.graduate.degree = "B15002_016",
  female.graduate.degree = "B15002_033"
)

####GIANTS/JETS--- EDUCATIONAL ATTAINMENT
rutherford.nj.education <- get_acs(
  geography = "tract",
  variables = nj.educational_attainment,
  state = "NJ",
  county = "Bergen",
  year = 2009,
  geometry = TRUE,
  summary_var = "B01003_001",
  survey = "acs5",
  output = "wide") %>%
  arrange(GEOID)

rutherford.nj.education <- rutherford.nj.education %>%
  group_by(GEOID) %>%
  mutate(total = sum(male.graduate.degreeE + female.graduate.degreeE)) %>%
  mutate(graduate.degree = 100 * (total / summary_est)) %>%
  select(-c(summary_est, summary_moe, male.graduate.degreeE, male.graduate.degreeM, female.graduate.degreeE, female.graduate.degreeM, total))


####JOINING TO COMBINED TRACTS TO DATA
rutherford.nj.education <- rutherford.nj.education %>%
  st_join(nj.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Passaic") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

rutherford.nj.education <- rutherford.nj.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
rutherford.nj.education <- rutherford.nj.education %>%
  st_drop_geometry()


####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
rutherford.nj.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "NJ",
  county = "Bergen",
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####SAN FRANCISCO 49ERS--- JOINING THE DATAFRAMES INTO ONE
rutherford.nj <- rutherford.nj.geo %>%
  left_join(rutherford.nj.housing) %>%
  left_join(rutherford.nj.race) %>%
  left_join(rutherford.nj.rentincome) %>%
  left_join(rutherford.nj.mortgageratio) %>%
  left_join(rutherford.nj.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Passaic")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
metlife.stadium.distance <- mb_geocode("MetLife Stadium, East Rutheford NJ")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_metlife <- mb_matrix(rutherford.nj, metlife.stadium.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
rutherford.nj$distance.to.stadium <- as.numeric(minutes_to_metlife)




####################
## LET'S GET TO WORK ... PULLING CENSUS DATA - ARLINGTON HEIGHTS, ILL
####################

##Arlington Heights, IL is located in two counties. Must pass a vector.

arlington.counties <- c("Cook", "Lake")

####CHICAGO BEARS --- RACE DEMOGRAPHICS
arlington.heights.race <- get_acs(
  geography = "tract",
  variables = race_demographic,
  state = "IL",
  county = arlington.counties,
  year = 2019,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####GIANTS/JETS --- GATHERING CITIES TO MERGE TRACTS WITH DATA
arlington.heights.cities <- get_acs(
  geography = "place",
  state = "IL",
  variables = "B01001_001",
  geometry = TRUE,
  year = 2019,
  survey = "acs1"
) %>%
  transmute(urban_name = str_remove(NAME, 
                                    fixed(" village, Illinois")))

####JOINING TO COMBINED TRACTS TO DATA
arlington.heights.race <- arlington.heights.race %>%
  st_join(arlington.heights.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Arlington Heights") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("white", "black", "asian", "hispanic"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
arlington.heights.race <- arlington.heights.race %>%
  st_drop_geometry()


##################
##################


####CHICAGO --- HOUSING INFORMATION (MORTGAGE, OWNED, RENT)
arlington.heights.housing <- get_acs(
  geography = "tract",
  variables = housing_numbers,
  state = "IL", 
  county = arlington.counties,
  year = 2019,
  geometry = TRUE,
  summary_var = "B25003_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(estimate = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))

####JOINING TO COMBINED TRACTS TO DATA
arlington.heights.housing <- arlington.heights.housing %>%
  st_join(arlington.heights.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Arlington Heights") %>%
  spread(variable, estimate) %>% ##NOTE: SPREAD IS JUST PREPPING FOR K-MEANS ... REMOVE TO DO ANY WORK WITH GEOM_SF
  rename_at(vars("units_loan", "units_owned", "units_rented"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
arlington.heights.housing <- arlington.heights.housing %>%
  st_drop_geometry()

##################
##################

####CHICAGO --- RENT TO INCOME RATIO
arlington.heights.rentincome <- get_acs(
  geography = "tract",
  variables = rent_to_income,
  state = "IL", 
  county = arlington.counties,
  year = 2019,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(rent.ratio = 100 * (median.rentE / (median.incomeE / 12)))

arlington.heights.rentincome$rent.ratio[is.na(arlington.heights.rentincome$rent.ratio)] <- 
  mean(arlington.heights.rentincome$rent.ratio, na.rm = TRUE)

arlington.heights.rentincome <- arlington.heights.rentincome %>%
  select(-c(median.incomeE, median.rentM, median.incomeM, median.rentE))

####JOINING TO COMBINED TRACTS TO DATA
arlington.heights.rentincome <- arlington.heights.rentincome %>%
  st_join(arlington.heights.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Arlington Heights") %>%
  rename_at(vars("rent.ratio"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
arlington.heights.rentincome <- arlington.heights.rentincome %>%
  st_drop_geometry()


##################
##################

####GIANTS/JETS--- MORTGAGE TO INCOME RATIO
arlington.heights.mortgageratio <- get_acs(
  geography = "tract",
  variables = mortgage_to_income,
  state = "IL", 
  county = arlington.counties,
  year = 2019,
  geometry = TRUE,
  output = "wide",
  survey = "acs5") %>%
  arrange(GEOID)

arlington.heights.mortgageratio$mortgage.ratioE[is.na(arlington.heights.mortgageratio$mortgage.ratioE)] <- 
  mean(arlington.heights.mortgageratio$mortgage.ratioE, na.rm = TRUE)

arlington.heights.mortgageratio <- arlington.heights.mortgageratio %>%
  select(-c(mortgage.ratioM))

####JOINING TO COMBINED TRACTS TO DATA
arlington.heights.mortgageratio <- arlington.heights.mortgageratio %>%
  st_join(arlington.heights.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Arlington Heights") %>%
  rename_at(vars("mortgage.ratioE"), list(~ str_c("pct_", .)))

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
arlington.heights.mortgageratio <- arlington.heights.mortgageratio %>%
  st_drop_geometry()



##################
##################

####CHICAGO BEARS  --- EDUCATIONAL ATTAINMENT
arlington.heights.education <- get_acs(
  geography = "tract",
  variables = educational_attainment,
  state = "IL",
  county = arlington.counties,
  year = 2019,
  geometry = TRUE,
  summary_var = "B02001_001",
  survey = "acs5") %>%
  arrange(GEOID) %>%
  mutate(graduate.degree = 100 * (estimate / summary_est)) %>%
  select(-c(summary_est, moe, summary_moe))


####JOINING TO COMBINED TRACTS TO DATA
arlington.heights.education <- arlington.heights.education %>%
  st_join(arlington.heights.cities, left = FALSE) %>%
  select(-NAME) %>%
  filter(urban_name == "Arlington Heights") %>%
  rename_at(vars("graduate.degree"), list(~ str_c("pct_", .)))

arlington.heights.education <- arlington.heights.education %>%
  select(GEOID, pct_graduate.degree, urban_name)

####NOW REMOVING GEOMETRY IN ORDER TO CLEANLY MERGE LATER ON
arlington.heights.education <- arlington.heights.education %>%
  st_drop_geometry()

####################
## MERGING THE DIFFERENT DATAFRAMES
####################

####PULLING GEOMETRY BACK IN TO REMERGE
arlington.heights.geo <- get_acs(
  geography = "tract",
  variables = "B02001_002",
  state = "IL",
  county = arlington.counties,
  geometry = TRUE) %>%
  select(-c(variable, estimate, moe))

####CHICAGO BEARS--- JOINING THE DATAFRAMES INTO ONE
arlington.heights <- arlington.heights.geo %>%
  left_join(arlington.heights.housing) %>%
  left_join(arlington.heights.race) %>%
  left_join(arlington.heights.rentincome) %>%
  left_join(arlington.heights.mortgageratio) %>%
  left_join(arlington.heights.education) %>%
  mutate(id = str_c(GEOID, NAME, sep = " | ")) %>%
  filter(urban_name == "Arlington Heights")

####################
## GETTING DISTANCE IN MINUTES TO STADIUM USING TRACT CENTROIDS
####################
##GETTING COORDINATE INFORMATION FOR ALLEGIANT STADIUM
arlington.stadium.distance <- mb_geocode("Arlington International Racecourse, Arlington Heights IL")
##MAPPING MINUTES TO ALLEGIANT VIA TRACT CENTROIDS
minutes_to_arlington <- mb_matrix(arlington.heights, arlington.stadium.distance)
##ADDING DISTANCE IN TIME MATRIX TO DISTANCE COLUMN
arlington.heights$distance.to.stadium <- as.numeric(minutes_to_arlington)




####################
## GROUPING ALL CITIES TOGETHER
####################

kmeans.data <- rbind(arlington.heights,
                     atlanta.georgia,
                     inglewood.cali,
                     minneapolis.minnesota,
                     paradise.nevada,
                     rutherford.nj,
                     santaclara.cali)

kmeans.data <- na.omit(kmeans.data)


st_write(paradise.nevada, "completedata.shp")


####################
## PREPARING PRINCIPLE COMPONENT ANALYSIS
####################

set.seed(1984)

cleaned.kmeans <- kmeans.data %>%
  select(-GEOID, -urban_name, -id, -NAME) %>%
  st_drop_geometry()

pca <- prcomp(
  formula = ~.,
  data = cleaned.kmeans,
  scale. = TRUE,
  center = TRUE)

summary(pca)

pca_tibble <- pca$rotation %>%
  as_tibble(rownames = "predictor")

pca_tibble %>%
  select(predictor:PC5) %>%
  pivot_longer(PC1:PC5, names_to = "component", values_to = "value") %>%
  ggplot(aes(x = value, y = predictor)) +
  geom_col(fill = "#00AFBB", color = "#BB0C00", alpha = 0.5) +
  facet_wrap(~component, nrow = 1) +
  labs(y = NULL, x = "Loaded Positively/Negatively") +
  theme_minimal()

components <- predict(pca, cleaned.kmeans)

total_pca <- kmeans.data %>%
  select(GEOID, urban_name, NAME) %>%
  cbind(components)

final_kmeans <- total_pca %>%
  st_drop_geometry() %>%
  select(PC1:PC10) %>%
  kmeans(centers = 3)

table(final_kmeans$cluster)

final_clusters <- total_pca %>%
  mutate(cluster = as.character(final_kmeans$cluster))

#####
##K-MEANS DATA VIZ STUFF
#####

ggbiplot(pca)

######################DONE##############################

final_clusters %>%
  group_by(urban_name, cluster) %>%
  dplyr::summarise(total = n())

output_clusters <- final_clusters

st_write(output_clusters, "kmeansdata.shp")

###########################################################

output_clusters.final <- output_clusters %>%
  select(-c(PC1:PC10)) %>%
  st_drop_geometry()

kmeans.join <- kmeans.data %>%
  select(-c(NAME, urban_name, NAME, id))

final.data <- left_join(output_clusters.final, as.data.frame(kmeans.join), by = c("GEOID" = "GEOID"))

st_write(final.data, "finaldata.shp")

final.data %>%
  group_by(urban_name, cluster) %>%
  summarize(total = n())

####GATHERING INTO CLUSTER 3 BY AREA TO PREP FOR ZTRAX

arlington.census <- final.data %>%
  filter(urban_name == "Arlington Heights" & cluster == 3)

atlanta.census <- final.data %>%
  filter(urban_name == "Atlanta" & cluster == 3)

minneapolis.census <- final.data %>%
  filter(urban_name == "Minneapolis" & cluster == 3)

paradise.census <- final.data %>%
  filter(urban_name == "Paradise" & cluster == 3)

rutherford.census <- final.data %>%
  filter(urban_name == "Passaic" & cluster == 3)

santaclara.census <- final.data %>%
  filter(urban_name == "Santa Clara" & cluster == 3)



####################
## MOVING TO ZTRAX DATA NOW
####################

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING ARLINGTON HEIGHTS INFORMATION
arlingtonheights.propertyinfo <- fread(file.path(dir, "\\ArlingtonHeights\\ZTrans\\PropertyInfo.txt"),
                                   select = c(1,53, 54, 55),
                                   sep = '|',
                                   header = FALSE,
                                   stringsAsFactors = FALSE,       
                                   quote = "")
##RENAMING THE COLUMNS
arlingtonheights.propertyinfo <- arlingtonheights.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
arlingtonheights.propertyinfo <- arlingtonheights.propertyinfo %>%
  filter(str_detect(CensusTract, c("7703", "7704", "8025", "8026", "8027",
                    "8028", "8029", "8030", "8031", "8032", "8033", "8034",
                    "8035", "8036", "8039", "8040", "8050", "8051", "8644", "8645")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

arlingtonheights.main <- fread(file.path(dir, "\\ArlingtonHeights\\ZTrans\\Main.txt"),
                                       select = c(1,18,25),
                                       sep = '|',
                                       header = FALSE,
                                       stringsAsFactors = FALSE,       
                                       quote = "")

arlingtonheights.main <- arlingtonheights.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

arlingtonheights.main <- na.omit(arlingtonheights.main)

arlington.data <- left_join(arlingtonheights.propertyinfo, arlingtonheights.main, by = c("RowID" = "RowID"))
arlington.data <- na.omit(arlington.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
arlington.data <- arlington.data %>%
  mutate(lat = 42.09339,
         log = -88.01013)


###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO PEAKS ICE ARENA
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
arlington.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
arlington.data


######################
### GETTING DATE COLUMNS###
######################

arlington.data <- arlington.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

arlington.data <- arlington.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

arlington.data <- arlington.data %>%
  filter(distance <= 20)

arlington.data <- arlington.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################

arlington.data <- arlington.data %>%
  mutate(urban_name = "Arlington Heights")

####################
####################
## MOVING TO ATLANTA
####################
####################

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper\\Atlanta"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING ARLINGTON HEIGHTS INFORMATION
atlanta.propertyinfo <- fread(file.path(dir, "\\ZTrans\\PropertyInfo.txt"),
                                       select = c(1,53, 54, 55),
                                       sep = '|',
                                       header = FALSE,
                                       stringsAsFactors = FALSE,       
                                       quote = "")
##RENAMING THE COLUMNS
atlanta.propertyinfo <- atlanta.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
atlanta.propertyinfo <- atlanta.propertyinfo %>%
  filter(str_detect(CensusTract, c("0001", "0100", "1010", "0102", "0011",
                                   "0111", "0002", "0003", "0004", "0049", "0005", "0050",
                                   "0052", "0053", "0080", "0089", "0090", "0093", "0094", "0095",
                                   "0096", "0097", "0098", "0099")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

atlanta.main <- fread(file.path(dir, "\\ZTrans\\Main.txt"),
                               select = c(1,18,25),
                               sep = '|',
                               header = FALSE,
                               stringsAsFactors = FALSE,       
                               quote = "")


atlanta.main <- atlanta.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

atlanta.main <- na.omit(atlanta.main)

atlanta.data <- left_join(atlanta.propertyinfo, atlanta.main, by = c("RowID" = "RowID"))
atlanta.data <- na.omit(atlanta.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
atlanta.data <- atlanta.data %>%
  mutate(lat = 33.75556,
         log = -84.40059)

###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO PEAKS ICE ARENA
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
atlanta.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
atlanta.data


######################
### GETTING DATE COLUMNS###
######################

atlanta.data <- atlanta.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

atlanta.data <- atlanta.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

atlanta.data <- atlanta.data %>%
  filter(distance <= 20)

atlanta.data <- atlanta.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################

atlanta.data <- atlanta.data %>%
  mutate(urban_name = "Atlanta")


####################
####################
## MOVING TO minneapolis
####################
####################

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper\\Minneapolis"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING ARLINGTON HEIGHTS INFORMATION
minneapolis.propertyinfo <- fread(file.path(dir, "\\ZTrans\\PropertyInfo.txt"),
                                  select = c(1,53, 54, 55),
                                  sep = '|',
                                  header = FALSE,
                                  stringsAsFactors = FALSE,       
                                  quote = "")
##RENAMING THE COLUMNS
minneapolis.propertyinfo <- minneapolis.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
minneapolis.propertyinfo <- minneapolis.propertyinfo %>%
  filter(str_detect(CensusTract, c("0001", "1002", "1005", "1007", "1012", "1036", "1051", "0106", "1065",
                                   "1066", "0107", "1074", "1075", "1076", "1087", "1088", "1089", "1090",
                                   "1091", "1097", "1098", "1099", "0011", "0110", "1101", "1102", "1104",
                                   "1105", "1108", "1109", "1111", "1112", "1113", "1114", "1115", "1116",
                                   "0117", "0118", "0119", "0120", "0121", "1256", "1262", "0201", "0204",
                                   "0205", "0212", "0214", "0217", "0218", "0220", "0228", "0229", "0231",
                                   "0236", "0238", "0241", "0244", "0247", "0249", "0003", "0006", "0090")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

minneapolis.main <- fread(file.path(dir, "\\ZTrans\\Main.txt"),
                          select = c(1,18,25),
                          sep = '|',
                          header = FALSE,
                          stringsAsFactors = FALSE,       
                          quote = "")

minneapolis.main <- minneapolis.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

minneapolis.main <- na.omit(minneapolis.main)

minneapolis.data <- left_join(minneapolis.propertyinfo, minneapolis.main, by = c("RowID" = "RowID"))
minneapolis.data <- na.omit(minneapolis.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
minneapolis.data <- minneapolis.data %>%
  mutate(lat = 44.97377,
         log = -93.25757)


###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO STADIUM
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
minneapolis.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
minneapolis.data


######################
### GETTING DATE COLUMNS###
######################

minneapolis.data <- minneapolis.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

minneapolis.data <- minneapolis.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

minneapolis.data <- minneapolis.data %>%
  filter(distance <= 20)

minneapolis.data <- minneapolis.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################


minneapolis.data <- minneapolis.data %>%
  mutate(urban_name = "Minneapolis")



####################
####################
## MOVING TO paradise
####################
####################

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper\\Nevada"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING ARLINGTON HEIGHTS INFORMATION
paradise.propertyinfo <- fread(file.path(dir, "\\ZTrans\\PropertyInfo.txt"),
                               select = c(1,53, 54, 55),
                               sep = '|',
                               header = FALSE,
                               stringsAsFactors = FALSE,       
                               quote = "")

##RENAMING THE COLUMNS
paradise.propertyinfo <- paradise.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
paradise.propertyinfo <- paradise.propertyinfo %>%
  filter(str_detect(CensusTract, c("0017", "0018", "0028", "0029", "0050", "0051", "0053", "0069")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

paradise.main <- fread(file.path(dir, "\\ZTrans\\Main.txt"),
                       select = c(1,18,25),
                       sep = '|',
                       header = FALSE,
                       stringsAsFactors = FALSE,       
                       quote = "")

paradise.main <- paradise.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

paradise.main <- na.omit(paradise.main)

paradise.data <- left_join(paradise.propertyinfo, paradise.main, by = c("RowID" = "RowID"))
paradise.data <- na.omit(paradise.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
paradise.data <- paradise.data %>%
  mutate(lat = 36.09093,
         log = -115.18334)

###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO STADIUM
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
paradise.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
paradise.data


######################
### GETTING DATE COLUMNS###
######################

paradise.data <- paradise.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

paradise.data <- paradise.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

paradise.data <- paradise.data %>%
  filter(distance <= 20)

paradise.data <- paradise.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################


paradise.data <- paradise.data %>%
  mutate(urban_name = "Paradise")



####################
####################
## MOVING TO Rutherford
####################
####################

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper\\Rutherford"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING RUTHERFORD INFORMATION
rutherford.propertyinfo <- fread(file.path(dir, "\\ZTrans\\PropertyInfo.txt"),
                                 select = c(1,53, 54, 55),
                                 sep = '|',
                                 header = FALSE,
                                 stringsAsFactors = FALSE,       
                                 quote = "")
##RENAMING THE COLUMNS
rutherford.propertyinfo <- rutherford.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
rutherford.propertyinfo <- rutherford.propertyinfo %>%
  filter(str_detect(CensusTract, c("0512", "0572", "0511", "0571")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

rutherford.main <- fread(file.path(dir, "\\ZTrans\\Main.txt"),
                         select = c(1,18,25),
                         sep = '|',
                         header = FALSE,
                         stringsAsFactors = FALSE,       
                         quote = "")

rutherford.main <- rutherford.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

rutherford.main <- na.omit(rutherford.main)

rutherford.data <- left_join(rutherford.propertyinfo, rutherford.main, by = c("RowID" = "RowID"))
rutherford.data <- na.omit(rutherford.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
rutherford.data <- rutherford.data %>%
  mutate(lat = 40.81358,
         log = -74.07444)

###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO STADIUM
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
rutherford.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
rutherford.data


######################
### GETTING DATE COLUMNS###
######################

rutherford.data <- rutherford.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

rutherford.data <- rutherford.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

rutherford.data <- rutherford.data %>%
  filter(distance <= 20)

rutherford.data <- rutherford.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################

rutherford.data <- rutherford.data %>%
  mutate(urban_name = "Rutherford")


####################
####################
## MOVING TO Santa Clara
####################
####################

###HEADS UP: THIS ONES TAKES QUITE A WHILE TO RUN AND COMPILE.

dir <- "D:\\ZTRAX\\Research\\ChicagoPaper\\Santa Clara"  ###Switching to Correct Directory

###CALLING IN LAYOUT STYLESHEET
layoutZAsmt <- read_excel(file.path(dir, 'layout.xlsx'), sheet = 1)
layoutZTrans <- read_excel(file.path(dir, 'layout.xlsx'), 
                           sheet = 2,
                           col_types = c("text", "text", "numeric", "text", "text"))


######################
### PropertyInfo.txt ###
######################

###CREATING DATA.TABLE OF utPropertyInfo.TXT Stylesheet
col_namesPropertyInfo <- layoutZTrans[layoutZTrans$TableName == 'utPropertyInfo', 'FieldName']


###PIVOTING STYLESHEETS TO WIDE FORMAT
col_namesPropertyInfo <- col_namesPropertyInfo %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

###GATHERING SANTA CLARA INFORMATION
santaclara.propertyinfo <- fread(file.path(dir, "\\ZTrans\\PropertyInfo.txt"),
                                 select = c(1,53, 54, 55),
                                 sep = '|',
                                 header = FALSE,
                                 stringsAsFactors = FALSE,       
                                 quote = "")
##RENAMING THE COLUMNS
santaclara.propertyinfo <- santaclara.propertyinfo %>%
  rename(
    RowID = V1,
    Latitude = V53,
    Longitude = V54,
    CensusTract = V55
  )

##SELECTING JUST THE CENSUS TRACTS FROM CLUSTER 3##
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
santaclara.propertyinfo <- santaclara.propertyinfo %>%
  filter(str_detect(CensusTract, c("5061", "5082", "5050", "5053", "5005", "5061", "5053", "5058")))

###CREATING DATA.TABLE OF utMain.TXT Stylesheet
col_namesMain <- layoutZTrans[layoutZTrans$TableName == 'utMain', 'FieldName']

col_namesMain <- col_namesMain %>%
  pivot_wider(names_from = FieldName, values_from = FieldName)

santaclara.main <- fread(file.path(dir, "\\ZTrans\\Main.txt"),
                         select = c(1,18,25),
                         sep = '|',
                         header = FALSE,
                         stringsAsFactors = FALSE,       
                         quote = "")

santaclara.main <- santaclara.main %>%
  rename(
    RowID = V1,
    Date = V18,
    SalesPrice = V25
  )

santaclara.main <- na.omit(santaclara.main)

santaclara.data <- left_join(santaclara.propertyinfo, santaclara.main, by = c("RowID" = "RowID"))
santaclara.data <- na.omit(santaclara.data)

######################
### GEO-CODING ###
######################

###CREATING VARIABLES FOR LATITUDE AND LONGITUDE
santaclara.data <- santaclara.data %>%
  mutate(lat = 37.40350,
         log = -121.96938)

###CREATING VARIABLE FOR DISTANCE FROM PROPERTY TO STADIUM
##THIS WILL THROW A WARNING MESSAGE ... BUT DON'T WORRY. IT WORKS.
meter2mile <- 0.000621371
santaclara.data[, distance := meter2mile * geosphere::distVincentyEllipsoid(
  cbind(Longitude, Latitude),
  cbind(log, lat)) ]
santaclara.data


######################
### GETTING DATE COLUMNS###
######################

santaclara.data <- santaclara.data %>%
  mutate(Date = as.Date(Date),
         year = year(Date), month = month(Date), day = day(Date))

######################
### DROPPING COLUMNS I DON'T NEED NOW###
######################

santaclara.data <- santaclara.data %>%
  select(-c(Latitude, Longitude, CensusTract, Date, lat, log, month, day))

######################
### JUST 20 MILES AND ADD DISTANCE ORD###
######################

santaclara.data <- santaclara.data %>%
  filter(distance <= 20)

santaclara.data <- santaclara.data %>%
  mutate(distance_ord = factor(
    case_when(
      distance <= 5 ~ "Short",
      distance >= 5.0000001 & distance <= 10  ~ "Moderate",
      distance >= 10.0000001 & distance <= 15 ~ "Long",
      distance >= 15.0000001 & distance <= 20 ~ "Very Long")))


######################
### ADDING URBAN NAME###
######################

santaclara.data <- santaclara.data %>%
  mutate(urban_name = "Santa Clara")


####################
####################
## ADDING YEAR ORD
####################
####################

arlington.data$year_ord = as.numeric(arlington.data$year >= 2019)
atlanta.data$year_ord = as.numeric(atlanta.data$year >= 2014)
minneapolis.data$year_ord = as.numeric(minneapolis.data$year >= 2013)
paradise.data$year_ord = as.numeric(paradise.data$year >= 2017)
rutherford.data$year_ord = as.numeric(rutherford.data$year >= 2007)
santaclara.data$year_ord = as.numeric(santaclara.data$year >= 2012)


####################
####################
## MERGING DATA TOGETHER
####################
####################

merged.data <- rbind(arlington.data,
                     atlanta.data,
                     minneapolis.data,
                     paradise.data,
                     rutherford.data,
                     santaclara.data)

testing.merged <- merged.data %>%
  filter(SalesPrice >= 50000 & SalesPrice <= 1000000)

###NONLOGARTHMIC HISTOGRAM nonfaceted
ggplot(data = testing.merged, aes(x = SalesPrice)) +
  geom_histogram(fill = "#56b4e9", color = "black" ) +
  scale_x_continuous(labels = scales::dollar_format(),
                     breaks = scales::pretty_breaks(n = 2)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 7),
                     labels = scales::comma,
                     expand = c(0,0)) +
  xlab("Sales Price") +
  ylab("Number of Houses") +
  labs(title = "Histogram: Sales Price vs. # of Houses") +
  theme_fivethirtyeight()



ggsave("non-log-unfaceted.png", dpi = 400)

###NONLOGARTHMIC HISTOGRAM faceted
ggplot(data = testing.merged, aes(x = SalesPrice)) +
  geom_histogram(fill = "#56b4e9", color = "black" ) +
  scale_x_continuous(labels = scales::dollar_format(),
                     breaks = scales::pretty_breaks(n = 2)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 7),
                     labels = scales::comma,
                     expand = c(0,0)) +
  xlab("Sales Price") +
  ylab("Number of Houses") +
  labs(title = "Histogram: Sales Price vs. # of Houses") +
  facet_wrap(~urban_name) +
  theme_fivethirtyeight() +
  theme(
    legend.position="none",
    panel.spacing = unit(1.5, "lines"),
    strip.text.x = element_text(size = 8))


###LOGARTHMIC HISTOGRAM faceted
ggplot(data = testing.merged, aes(x = log(SalesPrice))) +
  geom_histogram(aes(y = ..density..), fill = "#56b4e9", color = "black") +
  geom_density(alpha = .35, fill = "#e99856") +
  scale_x_continuous(trans='log10',
                     breaks=trans_breaks('log10', function(x) 10^x),
                     labels=trans_format('log10', math_format(10^.x))) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 7),
                     labels = scales::comma,
                     expand = c(0,0)) +
  xlab("Sales Price") +
  ylab("Number of Houses") +
  labs(title = "Logarithmic Histogram: Sales Price vs. # of Houses") +
  facet_wrap(~urban_name) +
  theme_fivethirtyeight() +
  theme(
    legend.position="none",
    panel.spacing = unit(1.5, "lines"),
    strip.text.x = element_text(size = 8))

ggsave("log-faceted.png", dpi = 400)

###LOGARTHMIC HISTOGRAM nonfaceted
ggplot(data = testing.merged, aes(x = log(SalesPrice))) +
  geom_histogram(aes(y = ..density..), fill = "#56b4e9", color = "black") +
  geom_density(alpha = .35, fill = "#e99856") +
  scale_x_continuous(trans='log10',
                     breaks=trans_breaks('log10', function(x) 10^x),
                     labels=trans_format('log10', math_format(10^.x))) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 7),
                     labels = scales::comma,
                     expand = c(0,0)) +
  xlab("Sales Price") +
  ylab("Number of Houses") +
  labs(title = "Logarithmic Histogram: Sales Price vs. # of Houses") +
  theme_fivethirtyeight()

ggsave("log-unfaceted.png", dpi = 400)


###################
####################
## CONSTRUCTING DID MODEL
####################
####################

###COMBINED GROUP MODEL
models <- merged.data %>%
  group_by(urban_name) %>%
  summarise(mod = list(lm(SalesPrice ~ distance_ord * year_ord)))

###INDIVIDUAL MODELS
atlanta.model <- lm(log(SalesPrice) ~ relevel(distance_ord, ref = "Short") * year_ord, data = atlanta.data)
atlanta.model

minneapolis.model <- lm(log(SalesPrice) ~ relevel(distance_ord, ref = "Short") * year_ord, data = minneapolis.data)
minneapolis.model

paradise.model <- lm(log(SalesPrice) ~ relevel(distance_ord, ref = "Short") * year_ord, data = paradise.data)
paradise.model

rutherford.model <- lm(log(SalesPrice) ~ relevel(distance_ord, ref = "Short") * year_ord, data = rutherford.data)
rutherford.model

santaclara.model <- lm(log(SalesPrice) ~ relevel(distance_ord, ref = "Short") * year_ord, data = santaclara.data)
santaclara.model

#################
##MEANS CENTERING THE REGRESSION MODEL ... STILL DECIDING ON THIS
#################

v.center <- c("TotalBedrooms", "SqFt", "age", "TotalCalculatedBath")

meanCenter(model, centerOnlyInteractors = TRUE, centerDV = FALSE,
           standardize = TRUE, terms = v.center)

#################
##MQ-Q Plot for Distribution Checking
#################

ggplot(data = merged.data, aes(sample = log10(SalesPrice^(1/3)))) +
  stat_qq_line() +
  stat_qq_point() +
  stat_qq_band(alpha=0.5) +
  labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
  scale_x_continuous(breaks = scales::pretty_breaks(n = 4)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 3)) +
  labs(title = "Q-Q Plots",
       subtitle = "Fat Tail Distributions") +
  theme(
    plot.background = element_rect(fill = "#f0f0f0", color = NA),
    panel.background = element_rect(fill = "#f0f0f0", color = NA),
    panel.grid.major =  element_line(color = "#d0d0d0"),
    panel.border = element_blank(),
    text = element_text(family = "Chivo"),
    axis.text = element_text(face = "bold", color = "black", size = 13),
    axis.title = element_text(face = "bold", size = rel(1.33)),
    axis.title.x = element_text(margin = margin(0.5, 0, 0, 0, unit = "cm")),
    axis.title.y = element_text(margin = margin(0, 0.5, 0, 0, unit = "cm"), angle =90),
    plot.title.position = "plot",
    plot.title = element_text(size = 18, face = "bold"),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 10, hjust = 1),
    axis.ticks = element_blank()) +
  facet_wrap(~urban_name)

###################
####################
## VISUALIZATIONS
####################
####################

#########
##STACKED MAPS (TESTING FOR K-MEANS CLUSTERS)
#########


####USING LAYER'S BUILT IN FUNCTION
tilt_landscape_1 <- tilt_map(paradise.nevada.race)
tilt_landscape_2 <- tilt_map(paradise.nevada.race, x_shift = .01, y_shift = .18)
tilt_landscape_3 <- tilt_map(paradise.nevada.race, x_shift = .01, y_shift = .36)
tilt_landscape_4 <- tilt_map(paradise.nevada.race, x_shift = .01, y_shift = .54)

map_list <- list(tilt_landscape_1, tilt_landscape_2, tilt_landscape_3, tilt_landscape_4)

plot_tiltedmaps(map_list, 
                layer = c("pct_white", "pct_black", "pct_asian", "pct_hispanic"),
                palette = "mako")

###USING GGPLOT FOR MORE CONTROL (BUT WAY HARDER)

###
##ARLINGTON HEIGHTS CLUSTER MAP
###
arlington.test <- st_as_sf(arlington.heights)  ##NEED TO TRANSFORM DATA.FRAME TO SF

ggplot() +
  geom_sf(data = layer::tilt_map(arlington.test), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(arlington.test, x_shift = -.05, y_shift = .15),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("arlington-clusters.png", dpi = 400)


###
##ATLANTA CLUSTER MAP
###
atlanta.test <- final.data %>%
  filter(urban_name == "Atlanta")

atlanta.test <- st_as_sf(atlanta.test) 

ggplot() +
  geom_sf(data = layer::tilt_map(atlanta.test, y_tilt = 2), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(atlanta.test, y_tilt = 2, x_shift = -.05, y_shift = .35),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("atlanta-clusters.png", dpi = 400)

###
##MINNEAPOLIS CLUSTER MAP
###
minneapolis.test <- final.data %>%
  filter(urban_name == "Minneapolis")

minneapolis.test <- st_as_sf(minneapolis.test) 

ggplot() +
  geom_sf(data = layer::tilt_map(minneapolis.test, y_tilt = 2), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(minneapolis.test, y_tilt = 2, x_shift = -.08, y_shift = .35),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("minneapolis-clusters.png", dpi = 400)

###
##PARADISE HEIGHTS CLUSTER MAP
###
paradise.test <- final.data %>%
  filter(urban_name == "Paradise")

paradise.test <- st_as_sf(paradise.test) 

ggplot() +
  geom_sf(data = layer::tilt_map(paradise.test, y_tilt = 1.5), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(paradise.test, y_tilt = 1.5, x_shift = -.08, y_shift = .20),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("paradise-clusters.png", dpi = 400)

###
##SANTA CLARA CLUSTER MAP
###
santaclara.test <- final.data %>%
  filter(urban_name == "Santa Clara")

santaclara.test <- st_as_sf(santaclara.test) 

ggplot() +
  geom_sf(data = layer::tilt_map(santaclara.test, y_tilt = 1.5), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(santaclara.test, y_tilt = 1.5, x_shift = -.08, y_shift = .21),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("santaclara-clusters.png", dpi = 400)

###
##PASSAIC HEIGHTS CLUSTER MAP
###
passaic.test <- final.data %>%
  filter(urban_name == "Passaic")

passaic.test <- st_as_sf(passaic.test) 

ggplot() +
  geom_sf(data = layer::tilt_map(passaic.test, y_tilt = 1.5), 
          aes(fill = ifelse(cluster == 2, cluster, NA))) +
  geom_sf(data = layer::tilt_map(passaic.test, y_tilt = 1.5, x_shift = -.05, y_shift = .03),
          aes(fill = ifelse(cluster == 3, cluster, NA))) +
  scale_fill_discrete(na.value = "transparent") +
  theme_void() +
  theme(legend.position = "none")

ggsave("passaic-clusters.png", dpi = 400)


#########
##DOING STATE/CENSUS TRACT OUTLINES
#########

####ILLINOIS - ARLINGTON HEIGHTS####
illinois_sf <- tigris::counties(state = "Illinois")

illinois_bounded <- arlington.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = illinois_sf, fill = "transparent") +
  geom_sf(data = illinois_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("illinois-bounded.png", dpi = 400)

####GEORGIA - ATLANTA###
georgia_sf <- tigris::counties(state = "Georgia")

atlanta_bounded <- atlanta.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = georgia_sf, fill = "transparent") +
  geom_sf(data = atlanta_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("atlanta-bounded.png", dpi = 400)


####MINNESOTA - MINNEAPOLIS###
minnesota_sf <- tigris::counties(state = "Minnesota")

minneapolis_bounded <- minneapolis.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = minnesota_sf, fill = "transparent") +
  geom_sf(data = minneapolis_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("minneapolis-bounded.png", dpi = 400)

####NEVADA - PARADISE###
nevada_sf <- tigris::counties(state = "Nevada")

paradise_bounded <- paradise.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = nevada_sf, fill = "transparent") +
  geom_sf(data = paradise_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("paradise-bounded.png", dpi = 400)

####CALIFORNIA - SANTA CLARA###
california_sf <- tigris::counties(state = "California")

santaclara_bounded <- santaclara.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = california_sf, fill = "transparent") +
  geom_sf(data = santaclara_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("santaclara-bounded.png", dpi = 400)

####NEW YORK - PASSAIC###
jersey_sf <- tigris::counties(state = "New Jersey")

passaic_bounded <- passaic.test %>% ###BINDING JUST THE BOUNDARIES OF THE TRACTS
  dplyr::summarise(across(geometry, ~ sf::st_union(.)), .groups = "drop") %>%
  dplyr::summarise(across(geometry, ~ sf::st_combine(.)), .groups = "keep")

ggplot() +
  geom_sf(data = jersey_sf, fill = "transparent") +
  geom_sf(data = passaic_bounded, col = "#00AFBB", fill = "transparent", size = .5) +
  theme_void()

ggsave("passaic-bounded.png", dpi = 400)


#########
##ISOMAPPING DISTANCE FOR ARLINGTING HEIGHTS
#########

arlington.race <- c("-88.010102466048", "42.093383772976495")

isochrones <- mb_isochrone(arlington.race, 
                           distance = c(8046,
                                        16093,
                                        24140,
                                        32186))

mapdeck(style = mapdeck_style("streets"),
        location = c("-88.010102466048", "42.093383772976495"),
        zoom = 8.5) %>%
  add_polygon(data = isochrones,
              fill_colour = "distance",
              fill_opacity = 0.4,
              legend = FALSE,
              update_view = FALSE)

meters2miles <- c(5,10,15,20)


#########
##GT TABLE CODING
#########

merged.data %>%
  summarize(max = max(SalesPrice))

cleaned.merged <- merged.data %>%
  filter(SalesPrice >= 50000 & SalesPrice <= 1000000)

testing.sparklines <- cleaned.merged %>%
  dplyr::group_by(urban_name) %>%
  dplyr::summarize(
    Distance = list(distance),
    `Sales Price` = list(SalesPrice),
    .groups = "drop")

testing.sparklines %>%
  arrange(urban_name) %>%
  gt() %>%
  gtExtras::gt_sparkline(Distance, type = "density", line_color = "black", 
                         fill_color = "#56b4e9", label = "Distance") %>%
  gtExtras::gt_sparkline(`Sales Price`, type = "density", line_color = "black", 
                         fill_color = "#56b4e9")
